pa
devtools::document()
mll_df_example
mll_df_example
mll_df_example
xsdmMle::mll_df_example
mll_df_example[1, 1:9]
mll_df_example[1, 1:9]
xsdmMle::mll_df_example
usethis::use_data(xsdmMle::mll_df_example)
mll_df_example <- xsdmMle::mll_df_example
usethis::use_data(mll_df_example)
usethis::use_data(mll_df_example, overwrite = TRUE)
devtools::document()
devtools::document()
devtools::document()
#' mu <- paramListExample$mu
#' sigLtil <- paramListExample$sigLtil
#' sigRtil <- paramListExample$sigRtil
#' pd <- paramListExample$pd
#' ctil <- paramListExample$ctil
#' envdat <- envdat_ex
#' pa <- occExample
#'
#' ll <- loglik_orthog_nd(O = O, mu = mu, sigLtil = sigLtil,sigRtil =  sigLtil, pd = pd, ctil = ctil,
#' envdat_ex, pa )
loglik_orthog_nd = function(O, mu, sigLtil, sigRtil, pd, ctil, envdat, pa,
num_threads = RcppParallel::defaultNumThreads(),
sum_logp = TRUE,
return_prob = FALSE)
{
RcppParallel::setThreadOptions(numThreads = num_threads)
#get the probability of detection for each location
logpdetect = logprobdetect(O = O,
mu = mu,
sigLtil = sigLtil,
sigRtil = sigRtil,
pd = pd,
ctil = ctil,
envdat = envdat)
#now get the log likelihood and return
#res = sum(pa*logpdetect+(1-pa)*log(1-exp(logpdetect)))
#this is what you want but you probably want to use
#a log1mexp type function for numeric stability
#copula::log1mexp(a) for positive a is actually log(1-exp(-a))
#for some reason
if(sum_logp){
} else {
res = pa*logpdetect + (1 - pa)*copula::log1mexp(-logpdetect)
}
if(return_prob == FALSE){
res <- exp(res)
}
RcppParallel::setThreadOptions(numThreads = RcppParallel::defaultNumThreads())
return(res)
}
O <-  paramListExample$O
mu <- paramListExample$mu
sigLtil <- paramListExample$sigLtil
sigRtil <- paramListExample$sigRtil
pd <- paramListExample$pd
ctil <- paramListExample$ctil
envdat <- envdat_ex
pa <- occExample
ll <- loglik_orthog_nd(O = O, mu = mu, sigLtil = sigLtil,sigRtil =  sigLtil, pd = pd, ctil = ctil,
envdat_ex, pa )
sum_logp
O <-  paramListExample$O
mu <- paramListExample$mu
sigLtil <- paramListExample$sigLtil
sigRtil <- paramListExample$sigRtil
pd <- paramListExample$pd
ctil <- paramListExample$ctil
envdat <- envdat_ex
pa <- occExample
#get the probability of detection for each location
logpdetect = logprobdetect(O = O,
mu = mu,
sigLtil = sigLtil,
sigRtil = sigRtil,
pd = pd,
ctil = ctil,
envdat = envdat)
logpdetect
envdat
res = pa*logpdetect + (1 - pa)*copula::log1mexp(-logpdetect)
res
if(sum_logp){
res = sum(pa*logpdetect + (1 - pa)*copula::log1mexp(-logpdetect))
} else {
res = pa*logpdetect + (1 - pa)*copula::log1mexp(-logpdetect)
}
res
res = sum(pa*logpdetect + (1 - pa)*copula::log1mexp(-logpdetect))
res
res = pa*logpdetect + (1 - pa)*copula::log1mexp(-logpdetect)
res <- exp(res)
res
which (res > 1)
which (res < 0 )
which (res >0.5 0 )
which (res >0.5  )
devtools::document()
rm(list = c("loglik_orthog_nd"))
devtools::document()
logprobdetect
?logprobdetect
devtools::document()
devtools::document()
devtools::document()
devtools::document()
ll <- loglik_orthog_nd(envdat_ex, pa , mu = mu, sigLtil = sigLtil,sigRtil =  sigLtil, ctil = ctil, pd = pd, O = O
)
O <-  paramListExample$O
mu <- paramListExample$mu
sigLtil <- paramListExample$sigLtil
sigRtil <- paramListExample$sigRtil
pd <- paramListExample$pd
ctil <- paramListExample$ctil
envdat <- envdat_ex
pa <- occExample
ll <- loglik_orthog_nd(envdat_ex, pa , mu = mu, sigLtil = sigLtil,sigRtil =  sigLtil, ctil = ctil, pd = pd, O = O)
#get the probability of detection for each location
logpdetect = logprobdetect(envdat = envdat,
mu = mu,
sigLtil = sigLtil,
sigRtil = sigRtil,
pd = pd,
ctil = ctil,
O = O
)
logpdetect
#get the probability of detection for each location
logpdetect = logprobdetect(envdat = envdat,
mu = mu,
sigLtil = sigLtil,
sigRtil = sigRtil,
pd = pd,
ctil = ctil,
O = O, return_prob = FALSE
)
logpdetect
#get the probability of detection for each location
logpdetect = logprobdetect(envdat = envdat,
mu = mu,
sigLtil = sigLtil,
sigRtil = sigRtil,
pd = pd,
ctil = ctil,
O = O, return_prob = TRUE
)
#get the probability of detection for each location
logpdetect = logprobdetect(envdat = envdat,
mu = mu,
sigLtil = sigLtil,
sigRtil = sigRtil,
pd = pd,
ctil = ctil,
O = O, return_prob = TRUE
)
logpdetect
devtools::document()
devtools::document()
ll <- loglik_orthog_nd(envdat_ex, pa , mu = mu, sigLtil = sigLtil,
sigRtil =  sigLtil, ctil = ctil, pd = pd, O = O)
ll
M <- logprobdetect_r(O, mu, sigLtil, sigRtil, pd, ctil, envdat_ex)
M
O = matrix(c(-0.4443546, 0.8958510, -0.8958510, -0.4443546), ncol = 2)
mu = c(11.433373, 5.046939)
sigLtil = c(1.036834, 1.556083)
sigRtil = c(1.538972, 1.458738)
pd = 0.9
ctil = -1
library(devtools)
document()
install.packages("copula")
install.packages("ucminf")
install.packages("copula")
library("ucminf")
library("copula")
library("expm")
library("future.callr")
library("optimx")
library("pomp")
install.packages("RcppParallel")
install.packages("terra")
library("terra")
install.packages("remotes")
remotes::install_version("terra", version = "1.8-65")
remotes::install_version("terra", version = "1.8-60")
library("RcppParallel")
library("Rcpp")
envdat_ex[ , ,1:4]
library(xsdmMle)
optim_df <- optim_mll(envdat_ex[ , ,1:4], occExample[1:4], numstarts = 4)
optim_df
envdat_ex
occExample
length(occExample)
optim_df <- optim_mll(envdat_ex[ , ,], occExample[], numstarts = 4)
optim_df <- optim_mll(envdat_ex[ , ,], occExample[], numstarts = 100)
optim_df
optim_df <- optim_mll(envdat_ex[ , ,], occExample[], numstarts = 10)
optim_df
library(xsdmMle)
library(xsdmMle)
optim_df <- optim_mll(envdat_ex[ , ,], occExample[], numstarts = 10)
optim_df
optim_df <- optim_mll(envdat_ex[ , ,], occExample[], numstarts = 1000, parallel = TRUE)
envdat_ex
optim_df
optim_df %>% ggplot + geom_dentisy(aes(mu1))
library(tidyverse)
library(tidyverse)
library(ggplot2)
optim_df %>% ggplot + geom_dentisy(aes(mu1))
library(dplyr)
optim_df %>% ggplot + geom_dentisy(aes(mu1))
optim_df %>% ggplot + geom_density(aes(mu1))
optim_df
optim_df %>% ggplot + geom_density(aes(mu1, mu2))
optim_df %>% ggplot + geom_density_2d(aes(mu1, mu2))
optim_df %>% ggplot + geom_point(aes(mu1, mu2))
optim_df
optim_df
optim_df %>% ggplot + geom_point(aes(sigLtil2, mu2))
optim_df
occExample
